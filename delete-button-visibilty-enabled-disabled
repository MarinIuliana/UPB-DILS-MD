Button myButton = (Button)findViewById(R.id.thebuttonid);
   myButton.setEnabled(false);
myButton.setVisibility(View.invisible);
<!-- button is disabled and invisible --!>
CheckBox checkbox= (CheckBox)findViewById(R.id.checkBox);
   OnCheckedChangeListener checker = new OnCheckedChangeListener(){ 
   <!--listner --!>
   @Override
<!-- Called when the checked state of a compound button has changed.
buttonView 	The compound button view whose state has changed.
isChecked 	The new checked state of buttonView. --!>
<!--CompoundButton  A button with two states, checked and unchecked. When the button is
pressed or clicked, the state changes automatically. --!>
public void onCheckedChanged(CompoundButton buttonView, boolean isChecked)
if(checkbox.isChecked()){i++;}
else{i--;}
           if(i >= 1){ myButton.setEnabled(true);} && { myButton setVisibility(View.Visible);}
           else.setEnabled(false);}
           <!-- when one or more checkboxes are checked the button becomes enabled and visible other wise it's enabled --!>
       }



